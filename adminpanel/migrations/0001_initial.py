# Generated by Django 3.1.7 on 2021-03-19 07:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(default='', max_length=300)),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(default='', max_length=256)),
                ('image_1', models.ImageField(upload_to='media')),
                ('image_2', models.ImageField(upload_to='media')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services_category', to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='TopServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.services')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(default='', max_length=300)),
                ('sub_category_image', models.ImageField(blank=True, null=True, upload_to='media')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.AddField(
            model_name='services',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.subcategory'),
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', max_length=256)),
                ('email', models.EmailField(default='', max_length=256, unique=True)),
                ('password', models.CharField(default='', max_length=100)),
                ('confirm_password', models.CharField(default='', max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media')),
                ('country_code', models.IntegerField()),
                ('phone_number', models.IntegerField()),
                ('address', models.CharField(default='', max_length=556)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
                ('services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.services')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(default='', max_length=256)),
                ('email', models.EmailField(default='', max_length=256, unique=True)),
                ('password', models.CharField(default='', max_length=100)),
                ('confirm_password', models.CharField(default='', max_length=100)),
                ('country_code', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media')),
                ('is_user', models.BooleanField(default=False)),
                ('is_provider', models.BooleanField(default=False)),
                ('is_sub_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('can_manage_user', models.BooleanField(default=False)),
                ('can_manage_order', models.BooleanField(default=False)),
                ('can_manage_provider', models.BooleanField(default=False)),
                ('can_manage_category', models.BooleanField(default=False)),
                ('can_manage_sub_category', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
    ]
